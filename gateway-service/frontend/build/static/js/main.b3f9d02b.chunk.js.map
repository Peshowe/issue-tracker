{"version":3,"sources":["ToggleMenu/List.js","ToggleMenu/Close.js","ToggleMenu/GitHub.js","ToggleMenu/BackButton.js","ToggleMenu/LogoutButton.js","ToggleMenu/ToggleMenu.js","LoadSpinner.js","Project/CreateProject.js","Project/ProjectExplorer.js","Issue/IssueForm.js","Issue/IssueModal.js","Project/AddUser.js","Project/LeaveProject.js","Issue/IssuesBoard.js","Project/Project.js","Login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["Ul","styled","ul","Li","li","MyDiv","div","props","active","List","useState","userPreference","setUserPreference","setError","useEffect","fetch","user","then","res","json","result","error","value","onChange","event","target","method","headers","Accept","body","JSON","stringify","is_mail_notification_on","onClose","style","padding","textAlign","onClick","size","cursor","Icon","Github","href","rel","ArrowBack","BackButton","borderRadius","window","location","pathname","history","back","LogOut","LogoutButton","reload","MenuIcon","BurgerIcon","ToggleMenu","menu","buttons","isOpen","setIsOpen","Close","GitHub","menuBackground","LoadSpinner","color","StyledModal","Modal","opacity","CreateProjectModal","setOpacity","projectName","setProjectName","isSubmitting","setIsSubmitting","toggleModal","e","handleChange","postProject","name","onCreate","className","afterOpen","setTimeout","beforeClose","Promise","resolve","onBackgroundClick","onEscapeKeydown","backgroundProps","message","type","ProjectExplorer","isLoaded","setIsLoaded","projects","setProjects","fetchProjects","undefined","CreateProject","map","item","to","id","IssueForm","issue","setIssue","setName","description","setDescription","issueType","setIssueType","bugTrace","setBugTrace","owner","setOwner","desc","issue_type","bug_trace","ownerSelect","ownerOptions","users","forEach","el","push","label","defaultValue","options","classNamePrefix","buttonHandler","buttonLabel","IssueModal","stopPropagation","onSubmit","onDone","submitLabel","toggleLabel","AddUserModal","newUser","setNewUser","postUser","projectId","userId","LeaveProjectModal","deleteUser","IssuesBoard","issuesLoaded","setIssuesLoaded","toDo","setToDo","inProgress","setInProgress","done","setDone","statusCols","statusVals","putIssue","putStatus","status","filter","is","popIssue","pushIssue","fetchIssues","issues","sort","a","b","last_modified_on","createDraggableIssues","draggableIssues","entries","bounds","onDrag","i","length","document","getElementById","getBoundingClientRect","clientX","left","right","console","log","onStop","toDoComponents","inProgressComponents","doneComponents","project","AddUser","LeaveProject","position","overflow","Project","projectLoaded","setProjectLoaded","setProject","match","params","Google","Login","origin","FadingBackground","BaseModalBackground","App","setUser","backgroundComponent","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"+RAGMA,EAAKC,UAAOC,GAAV,mFAMFC,EAAKF,UAAOG,GAAV,4EAMFC,EAAQJ,UAAOK,IAAV,wYAEA,SAAAC,GAAK,OAAIA,EAAMC,OAAS,sBAAwB,UA4E5CC,I,IAAAA,EA7Df,SAAcF,GAAQ,IAAD,EAEyBG,mBAAS,IAFlC,mBAEZC,EAFY,KAEIC,EAFJ,OAGOF,mBAAS,MAHhB,mBAGLG,GAHK,WA6CnB,OApBAC,qBAAU,WACRC,MAAM,yBAAD,OAA0BR,EAAMS,OAClCC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GAC0C,MAArCA,EAAM,wBACRR,EAAkB,SAElBA,EAAkBQ,EAAM,4BAM5B,SAACC,GACCR,EAASQ,QAGd,IAGD,mCACE,cAACrB,EAAD,UACE,cAACG,EAAD,UACE,eAACE,EAAD,iCAEE,yBAAQiB,MAAOX,EAAgBY,SA9CzC,SAA2BC,GACzBZ,EAAkBY,EAAMC,OAAOH,OAC/BP,MAAM,yBAA0B,CAC9BW,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBf,KAAMT,EAAMS,KACZgB,wBAAgD,QAAtBR,EAAMC,OAAOH,UAGxCL,MACD,SAACI,GACCR,EAASQ,OA+BL,UACE,wBAAQC,MAAM,OAAd,gBACA,wBAAQA,MAAM,QAAd,8B,QCjFC,kBAAGW,EAAH,EAAGA,QAAH,OACX,qBACIC,MAAO,CACHC,QAAS,sBACTC,UAAW,SAHnB,SAMI,cAAC,IAAD,CACIC,QAASJ,EACTK,KAAM,GACNJ,MAAO,CACHK,OAAQ,UACRH,UAAW,e,QCXrBI,EAAOvC,kBAAOwC,IAAPxC,CAAH,0JACN,GAEA,GACA,IAOW,oBACb,mBACEyC,KAAK,4CACLjB,OAAO,SACPkB,IAAI,sBAHN,SAKE,cAACH,EAAD,CAAMF,KAAM,Q,QChBVE,EAAOvC,kBAAO2C,IAAP3C,CAAH,wEA8BK4C,I,EAAAA,EAxBf,SAAoBtC,GAWhB,OAAQ,cAAC,EAAD,CACJ+B,KAAM,GACNJ,MAAO,CACHY,aAAc,MACdX,QAAS,MACTI,OAAQ,WAGZF,QAfJ,WAEoC,KAA5BU,OAAOC,SAASC,UAChBF,OAAOG,QAAQC,W,QCdrBX,EAAOvC,kBAAOmD,IAAPnD,CAAH,wEA2CKoD,I,EAAAA,EArCf,SAAsB9C,GAiBlB,OACI,uBAAM2B,MAAO,CACT,MAAS,QACT,aAAgB,SAFpB,iBAIS3B,EAAMS,KACX,cAAC,EAAD,CACIsB,KAAM,GACNJ,MAAO,CACHY,aAAc,MACdX,QAAS,MACTI,OAAQ,WAGZF,QA7BZ,WACItB,MAAM,gBACDE,MACG,SAACG,GACG2B,OAAOC,SAASM,YAKpB,SAACjC,GACG0B,OAAOC,SAASM,mBCV9BC,EAAWtD,kBAAOuD,IAAPvD,CAAH,wEAiECwD,MA3Df,SAAoBlD,GAAQ,IAGpBmD,EACAC,EAJmB,EACKjD,oBAAS,GADd,mBAChBkD,EADgB,KACRC,EADQ,KAmCvB,MA7BkB,IAAdtD,EAAMS,MACN0C,EAAO,cAAC,OAAD,IACPC,EAAU,2BAEVD,EAAQ,cAAC,OAAD,UACJ,qCACI,cAACI,EAAD,CAAO7B,QAAS,kBAAM4B,GAAU,MAChC,cAAC,EAAD,CAAM7C,KAAMT,EAAMS,YAG1B2C,EAAW,iCACP,cAAC,EAAD,IACA,cAACJ,EAAD,CACIjB,KAAM,GACNJ,MAAO,CACHY,aAAc,MACdX,QAAS,MACTI,OAAQ,WAGZF,QAAS,WAAQwB,GAAU,SAACD,GAAD,OAAaA,QAG5C,cAACG,EAAD,IAEA,cAAC,EAAD,CAAc/C,KAAMT,EAAMS,WAK9B,8BACI,eAAC,kBAAD,CACIgD,eAAe,QACfJ,OAAQA,EACR3B,QAAS,kBAAM4B,GAAU,IAH7B,UAKKF,EAED,sBAAMzB,MAAO,CACT,QAAW,MACX,YAAa,QACb,cAAe,OAHnB,yBAMCwB,EAGD,cAAC,UAAD,U,uBC/DDO,I,EAAAA,EANf,WACI,OACI,cAAC,qBAAD,CAAoBC,MAAM,S,iBCA5BC,EAAcC,IAAMnE,OAAT,qNAOJ,SAACM,GAAD,OAAWA,EAAM8D,WAwGfC,MArGf,SAA4B/D,GAAQ,IAAD,EACHG,oBAAS,GADN,mBACxBkD,EADwB,KAChBC,EADgB,OAEDnD,mBAAS,GAFR,mBAExB2D,EAFwB,KAEfE,EAFe,OAGO7D,mBAAS,IAHhB,mBAGxB8D,EAHwB,KAGXC,EAHW,OAIS/D,oBAAS,GAJlB,mBAIxBgE,EAJwB,KAIVC,EAJU,OAKLjE,mBAAS,MALJ,mBAKxBW,EALwB,KAKjBR,EALiB,KAO/B,SAAS+D,EAAYC,GACjBN,EAAW,GACXV,GAAWD,GAgBf,SAASkB,EAAatD,GAClBiD,EAAejD,EAAMC,OAAOH,OAGhC,SAASyD,IACLJ,GAAgB,GAChB5D,MAAM,eAAgB,CAClBW,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBiD,KAAMR,MAITvD,MACG,SAACG,GACGuD,GAAgB,GAEhBd,GAAU,GACVtD,EAAM0E,cAMV,SAAC5D,GACGsD,GAAgB,GAChB9D,EAASQ,MAOzB,OACI,sBACIa,MAAO,CACH,QAAW,SAFnB,UAKI,wBAAQG,QAASuC,EAAaM,UAAU,kBAAxC,yBACA,cAACf,EAAD,CACIP,OAAQA,EACRuB,UA3DZ,WACIC,YAAW,WACPb,EAAW,KACZ,MAyDKc,YAtDZ,WACI,OAAO,IAAIC,SAAQ,SAACC,GAChBhB,EAAW,GACXa,WAAWG,EAAS,SAoDhBC,kBAAmBZ,EACnBa,gBAAiBb,EACjBP,QAASA,EACTqB,gBAAiB,CAAErB,WAPvB,SAWYK,EACO,cAAC,EAAD,IACArD,EACA,0CAAaA,EAAMsE,WAElB,gCACJ,iCACI,mDACA,uBAAOC,KAAK,OAAOtE,MAAOkD,EAAajD,SAAUuD,OAGrD,wBAAQzC,QAAS0C,EAAaG,UAAU,kBAAxC,6BC1CbW,MArDf,WAA4B,IAAD,EACGnF,mBAAS,MADZ,mBAChBW,EADgB,KACTR,EADS,OAESH,oBAAS,GAFlB,mBAEhBoF,EAFgB,KAENC,EAFM,OAGSrF,mBAAS,IAHlB,mBAGhBsF,EAHgB,KAGNC,EAHM,KAQvB,SAASC,IACLnF,MAAM,gBACDE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACG2E,GAAY,QACWI,GAAnB/E,EAAO4E,UACPC,EAAY7E,EAAO4E,aAM3B,SAAC3E,GACG0E,GAAY,GACZlF,EAASQ,MAQzB,OAJAP,qBAAU,WACNoF,MACD,IAEC7E,EACO,0CAAaA,EAAMsE,WAClBG,EAIJ,gCAEI,cAACM,EAAD,CAAoBnB,SAAUiB,IAC7BF,EAASK,KAAI,SAAAC,GAAI,OAEd,qBAAKpB,UAAU,WAAf,SAA0B,cAAC,IAAD,CAAMqB,GAAE,oBAAeD,EAAKE,IAAMtB,UAAU,kBAA5C,SAA+DoB,EAAKtB,eARnG,cAAC,EAAD,K,yCCgEAyB,I,EAAAA,GAzGf,SAAmBlG,GAAQ,IAAD,EACIG,mBAAS,IADb,mBACfgG,EADe,KACRC,EADQ,OAEEjG,mBAAS,IAFX,mBAEfsE,EAFe,KAET4B,EAFS,OAGgBlG,mBAAS,IAHzB,mBAGfmG,EAHe,KAGFC,EAHE,OAIYpG,mBAAS,WAJrB,mBAIfqG,EAJe,KAIJC,EAJI,OAKUtG,mBAAS,IALnB,mBAKfuG,EALe,KAKLC,EALK,OAMIxG,mBAAS,MANb,mBAMfyG,EANe,KAMRC,EANQ,KAmBtBtG,qBAAU,WACa,MAAfP,EAAMmG,OAENC,EAASpG,EAAMmG,OACX,SAAUnG,EAAMmG,OAChBE,EAAQrG,EAAMmG,MAAM1B,MAEpB,SAAUzE,EAAMmG,OAChBI,EAAevG,EAAMmG,MAAMW,MAE3B,eAAgB9G,EAAMmG,OACtBM,EAAazG,EAAMmG,MAAMY,YAEzB,cAAe/G,EAAMmG,OACrBQ,EAAY3G,EAAMmG,MAAMa,WAExB,SAAUhH,EAAMmG,MAChBU,EAAS7G,EAAMmG,MAAM1F,MAErBoG,EAAS,KAKbA,EAAS7G,EAAMS,QAEpB,IAEH,IAGIwG,EAHEC,EAAe,GAgBrB,OAfAlH,EAAMmH,MAAMC,SAAQ,SAAAC,GAAE,OAAIH,EAAaI,KAAK,CAAEvG,MAAOsG,EAAIE,MAAOF,OAInD,MAATT,IAEAK,EAAe,cAAC,IAAD,CACXO,aAAc,CAAE,MAASZ,EAAO,MAASA,GACzCa,QAASP,EACTvC,UAAU,qBACV+C,gBAAgB,SAChB1G,SAAU,SAAAsD,GAAC,OAAIuC,EAASvC,EAAEvD,WAI1B,sBACJY,MAAO,GADH,UAMJ,iCACI,gCACI,2CACA,uBAAO0D,KAAK,OAAOtE,MAAO0D,EAAMzD,SAAU,SAAAsD,GAAC,OAAI+B,EAAQ/B,EAAEpD,OAAOH,UAEhE,iDACA,yBAAQA,MAAOyF,EAAWxF,SAAU,SAAAsD,GAAC,OAAImC,EAAanC,EAAEpD,OAAOH,QAA/D,UACI,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,0BAIR,gCACI,kDACA,uBACA,0BAAU4D,UAAU,YAAY5D,MAAOuF,EAAatF,SAAU,SAAAsD,GAAC,OAAIiC,EAAejC,EAAEpD,OAAOH,aAI/F,gCACI,gDACA,uBACA,0BAAU4D,UAAU,YAAY5D,MAAO2F,EAAU1F,SAAU,SAAAsD,GAAC,OAAIqC,EAAYrC,EAAEpD,OAAOH,aAEzF,gCACI,4CACCkG,EACD,6BAIR,wBAAQnF,QA7FZ,WAEIqE,EAAM1B,KAAOA,EACb0B,EAAMW,KAAOR,EACbH,EAAMY,WAAaP,EACnBL,EAAMa,UAAYN,EAClBP,EAAM1F,KAAOmG,EACbR,EAASD,GACTnG,EAAM2H,cAAcxB,IAqFMxB,UAAU,kBAApC,SAAuD3E,EAAM4H,kBClG/DhE,GAAcC,IAAMnE,OAAT,qNAOJ,SAACM,GAAD,OAAWA,EAAM8D,WAoFf+D,I,GAAAA,GAjFf,SAAoB7H,GAAQ,IAAD,EACKG,oBAAS,GADd,mBAChBkD,EADgB,KACRC,EADQ,OAEOnD,mBAAS,GAFhB,mBAEhB2D,EAFgB,KAEPE,EAFO,OAIiB7D,oBAAS,GAJ1B,mBAIhBgE,EAJgB,KAIFC,EAJE,OAKGjE,mBAAS,MALZ,mBAKhBW,EALgB,KAKTR,EALS,KAOvB,SAAS+D,EAAYC,GACjBA,EAAEwD,kBACF9D,EAAW,GACXV,GAAWD,GAgBf,SAAS0E,EAAS5B,GACd/B,GAAgB,GAChBpE,EAAM+H,SAAS5B,GACVzF,MACG,SAACG,GACGuD,GAAgB,GAEhBd,GAAU,GACVtD,EAAMgI,YAKV,SAAClH,GACGsD,GAAgB,GAChB9D,EAASQ,MAKzB,IAAMmH,EAA6B,MAAfjI,EAAMmG,MAAgB,eAAiB,eACrD+B,EAA6B,MAAflI,EAAMmG,MAAgB,YAAcnG,EAAMmG,MAAM1B,KAEpE,OACI,qCAKI,wBAAQ3C,QAASuC,EAAaM,UAAU,kBAAxC,SAA2DuD,IAC3D,cAAC,GAAD,CACI7E,OAAQA,EACRuB,UA7CZ,WACIC,YAAW,WACPb,EAAW,KACZ,MA2CKc,YAxCZ,WACI,OAAO,IAAIC,SAAQ,SAACC,GAChBhB,EAAW,GACXa,WAAWG,EAAS,SAsChBC,kBAAmBZ,EACnBa,gBAAiBb,EACjBP,QAASA,EACTqB,gBAAiB,CAAErB,WAPvB,SAWYK,EACO,cAAC,EAAD,IACArD,EACA,0CAAaA,EAAMsE,WAEnB,cAAC,GAAD,CAAWuC,cAAeI,EAAUH,YAAaK,EAAa9B,MAAOnG,EAAMmG,MAAO1F,KAAMT,EAAMS,KAAM0G,MAAOnH,EAAMmH,cCpF1IvD,GAAcC,IAAMnE,OAAT,uNAOJ,SAACM,GAAD,OAAWA,EAAM8D,WAuGfqE,I,GAAAA,GApGf,SAAsBnI,GAAQ,IAAD,EACGG,oBAAS,GADZ,mBAClBkD,EADkB,KACVC,EADU,OAEKnD,mBAAS,GAFd,mBAElB2D,EAFkB,KAETE,EAFS,OAGK7D,mBAAS,IAHd,mBAGlBiI,EAHkB,KAGTC,EAHS,OAIelI,oBAAS,GAJxB,mBAIlBgE,EAJkB,KAIJC,EAJI,OAKCjE,mBAAS,MALV,mBAKlBW,EALkB,KAKXR,EALW,KAOzB,SAAS+D,EAAYC,GACjBN,EAAW,GACXV,GAAWD,GAgBf,SAASkB,EAAatD,GAClBoH,EAAWpH,EAAMC,OAAOH,OAG5B,SAASuH,IACLlE,GAAgB,GAChB5D,MAAM,qBAAsB,CACxBW,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB+G,UAAWvI,EAAMuI,UACjBC,OAAQJ,MAIX1H,MACG,SAACG,GACGuD,GAAgB,GAEhBd,GAAU,MAOd,SAACxC,GACGsD,GAAgB,GAChB9D,EAASQ,MAOzB,OACI,qCAGI,wBAAQgB,QAASuC,EAAaM,UAAU,kBAAkBhD,MAAO,CAAE,OAAU,SAA7E,sBACA,cAAC,GAAD,CACI0B,OAAQA,EACRuB,UA1DZ,WACIC,YAAW,WACPb,EAAW,KACZ,MAwDKc,YArDZ,WACI,OAAO,IAAIC,SAAQ,SAACC,GAChBhB,EAAW,GACXa,WAAWG,EAAS,SAmDhBC,kBAAmBZ,EACnBa,gBAAiBb,EACjBP,QAASA,EACTqB,gBAAiB,CAAErB,WAPvB,SAWYK,EACO,cAAC,EAAD,IACArD,EACA,0CAAaA,EAAMsE,WAElB,gCACJ,iCACI,2CACA,uBAAOC,KAAK,OAAOtE,MAAOqH,EAASpH,SAAUuD,OAGjD,wBAAQzC,QAASwG,EAAU3D,UAAU,kBAArC,0BCpGtBf,GAAcC,IAAMnE,OAAT,uNAOJ,SAACM,GAAD,OAAWA,EAAM8D,WA+Ff2E,OA5Ff,SAA2BzI,GAAQ,IAAD,EACFG,oBAAS,GADP,mBACvBkD,EADuB,KACfC,EADe,OAEAnD,mBAAS,GAFT,mBAEvB2D,EAFuB,KAEdE,EAFc,OAGU7D,oBAAS,GAHnB,mBAGvBgE,EAHuB,KAGTC,EAHS,OAIJjE,mBAAS,MAJL,mBAIvBW,EAJuB,KAIhBR,EAJgB,KAM9B,SAAS+D,EAAYC,GACjBN,EAAW,GACXV,GAAWD,GAgBf,SAASqF,IACLtE,GAAgB,GAChB5D,MAAM,qBAAsB,CACxBW,OAAQ,SACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB+G,UAAWvI,EAAMuI,UACjBC,OAAQxI,EAAMS,SAIjBC,MACG,SAACG,GACGuD,GAAgB,GAEhBd,GAAU,MAOd,SAACxC,GACGsD,GAAgB,GAChB9D,EAASQ,MAOzB,OACI,qCAGI,wBAAQgB,QAASuC,EAAaM,UAAU,kBAAkBhD,MAAO,CAAE,MAAS,SAA5E,2BACA,cAAC,GAAD,CACI0B,OAAQA,EACRuB,UAtDZ,WACIC,YAAW,WACPb,EAAW,KACZ,MAoDKc,YAjDZ,WACI,OAAO,IAAIC,SAAQ,SAACC,GAChBhB,EAAW,GACXa,WAAWG,EAAS,SA+ChBC,kBAAmBZ,EACnBa,gBAAiBb,EACjBP,QAASA,EACTqB,gBAAiB,CAAErB,WAPvB,SAWYK,EACO,cAAC,EAAD,IACArD,EACA,0CAAaA,EAAMsE,WAElB,8EAGJ,wBAAQtD,QAAS4G,EAAY/D,UAAU,kBAAvC,iCCmHbgE,OA7Mf,SAAqB3I,GAAQ,IAAD,EAEEG,mBAAS,MAFX,mBAEjBW,EAFiB,KAEVR,EAFU,OAGgBH,oBAAS,GAHzB,mBAGjByI,EAHiB,KAGHC,EAHG,OAMA1I,mBAAS,IANT,mBAMjB2I,EANiB,KAMXC,EANW,OAOY5I,mBAAS,IAPrB,mBAOjB6I,EAPiB,KAOLC,EAPK,OAQA9I,mBAAS,IART,mBAQjB+I,EARiB,KAQXC,EARW,KAUlBC,EAAa,CAAC,WAAY,iBAAkB,YAC5CC,EAAa,CAAC,QAAS,cAAe,QAgD5C,SAASC,EAASnD,GACd,OAAO3F,MAAM,aAAc,CACvBW,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB2E,MAAOA,MAMnB,SAASoD,EAAUpD,EAAOqD,IA1D1B,SAAkBrD,GACM,SAAhBA,EAAMqD,OACNT,EAAQD,EAAKW,QAAO,SAAAC,GAAE,OAAIA,EAAGzD,IAAME,EAAMF,OAClB,eAAhBE,EAAMqD,OACbP,EAAcD,EAAWS,QAAO,SAAAC,GAAE,OAAIA,EAAGzD,IAAME,EAAMF,OAC9B,QAAhBE,EAAMqD,QACbL,EAAQD,EAAKO,QAAO,SAAAC,GAAE,OAAIA,EAAGzD,IAAME,EAAMF,OAqD7C0D,CAASxD,GACTA,EAAMqD,OAASA,EAjDnB,SAAmBrD,GAEK,SAAhBA,EAAMqD,OACNT,EAAQ,GAAD,mBAAKD,GAAL,CAAW3C,KACK,eAAhBA,EAAMqD,OACbP,EAAc,GAAD,mBAAKD,GAAL,CAAiB7C,KACP,QAAhBA,EAAMqD,QACbL,EAAQ,GAAD,mBAAKD,GAAL,CAAW/C,KA2CtByD,CAAUzD,GAEV0C,GAAgB,GAChBS,EAASnD,GACJzF,MACG,SAACG,GAEGgI,GAAgB,MAEpB,SAAC/H,GACG+H,GAAgB,GAChBvI,EAASQ,MAmCzB,SAAS+I,IACLrJ,MAAM,wBAAD,OAAyBR,EAAMuI,YAC/B7H,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GAGG,GAFAgI,GAAgB,QAEQjD,GAApB/E,EAAM,OAAyB,CAC/B,IAAIiJ,EAASjJ,EAAM,OACnBiJ,EAAOC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,iBAAmBD,EAAEC,oBAG7CnB,EAAQe,EAAOL,QAAO,SAAAtD,GAAK,MAAoB,SAAhBA,EAAMqD,WACrCP,EAAca,EAAOL,QAAO,SAAAtD,GAAK,MAAoB,eAAhBA,EAAMqD,WAC3CL,EAAQW,EAAOL,QAAO,SAAAtD,GAAK,MAAoB,QAAhBA,EAAMqD,eAM7C,SAAC1I,GACG+H,GAAgB,GAChBvI,EAASQ,MAKzB,SAASqJ,EAAsBL,GAC3B,IADmC,EAC7BM,EAAkB,GADW,cAENN,EAAOO,WAFD,kDAEhBtJ,GAFgB,WAG/BqJ,EAAgB9C,KAAK,cAAC,IAAD,CAAWgD,OAAO,SAASC,OAAQ,SAACjG,GAAD,OA1DhE,SAAgBA,EAAG6B,GAGf,IAAIqE,EACJ,IAFAlG,EAAEwD,kBAEG0C,EAAI,EAAGA,EAAIpB,EAAWqB,OAAQD,IAAK,CAEpC,IAAIF,EAASI,SAASC,eAAevB,EAAWoB,IAAII,wBAEpD,GAAKtG,EAAEuG,QAAUP,EAAOQ,MAAUxG,EAAEuG,QAAUP,EAAOS,MAAQ,CACzDC,QAAQC,IAAI,MAAQ5B,EAAWmB,IAI3BrE,EAAMqD,QAAUH,EAAWmB,IAE3BzB,EAAQD,GACRkC,QAAQC,IAAI,cAGZ1B,EAAUpD,EAAOkD,EAAWmB,IAEhC,QAqC2DU,CAAO5G,EAAGvD,IAApD,SAA6D,qBAAK4D,UAAU,WAAf,SAA0B,cAAC,GAAD,CAAYwB,MAAOpF,EAAON,KAAMT,EAAMS,KAAM0G,MAAOnH,EAAMmH,MAAOY,SAAUuB,EAAUtB,OAAQ,iBAAM,YADlN,2BAAgD,IAFb,8BAMnC,OAAOoC,EAOX,GAJA7J,qBAAU,WACNsJ,MACD,IAEC/I,EACA,OAAO,0CAAaA,EAAMsE,WACvB,GAAKwD,EAEL,CAEH,IAAMuC,EAAiBhB,EAAsBrB,GACvCsC,EAAuBjB,EAAsBnB,GAC7CqC,EAAiBlB,EAAsBjB,GAE7C,OACI,sBACIvH,MACI,CAAE,QAAW,SAFrB,UAII,gCACI,cAAC,GAAD,CAAY4G,UAAWvI,EAAMuI,UAAW9H,KAAMT,EAAMS,KAAM0G,MAAOnH,EAAMmH,MAAOY,SA7I9F,SAAmB5B,GACf,OAAO3F,MAAM,aAAc,CACvBW,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB2E,MAAO,CACH1B,KAAM0B,EAAM1B,KACZqC,KAAMX,EAAMW,KACZC,WAAYZ,EAAMY,WAClBC,UAAWb,EAAMa,UACjBwC,OAAQ,QACR8B,QAAStL,EAAMuI,UACf9H,KAAM0F,EAAM1F,WA8HuF0F,MAAO,KAAM6B,OAAQ6B,IACxH,cAAC0B,GAAD,CAAchD,UAAWvI,EAAMuI,YAC/B,cAACiD,GAAD,CAAmBjD,UAAWvI,EAAMuI,UAAW9H,KAAMT,EAAMS,UAE/D,uBACA,sBAAKwF,GAAG,QAAQtB,UAAU,MAAMhD,MAAO,CAAE8J,SAAU,WAAYC,SAAU,OAAQ9J,QAAS,KAA1F,UACI,sBAAKqE,GAAImD,EAAW,GAAIzE,UAAU,SAAlC,kBAECwG,KAED,sBAAKlF,GAAImD,EAAW,GAAIzE,UAAU,SAAlC,wBAECyG,KAED,sBAAKnF,GAAImD,EAAW,GAAIzE,UAAU,SAAlC,iBAEC0G,WA7Bb,OAAO,cAAC,EAAD,KCvHAM,I,GAAAA,GAjDf,SAAiB3L,GAAQ,IAAD,EACMG,mBAAS,MADf,mBACbW,EADa,KACNR,EADM,OAEsBH,oBAAS,GAF/B,mBAEbyL,EAFa,KAEEC,EAFF,OAGU1L,mBAAS,MAHnB,mBAGbmL,EAHa,KAGJQ,EAHI,KAgCpB,OAJAvL,qBAAU,WAtBNC,MAAM,qBAAD,OAAsBR,EAAM+L,MAAMC,OAAOzD,YACzC7H,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACGiL,EAAWjL,GACXgL,GAAiB,MAKrB,SAAC/K,GACG+K,GAAiB,GACjBvL,EAASQ,QAYtB,IAECA,EACO,0CAAaA,EAAMsE,WAClBwG,EAIJ,gCACI,oBAAIjK,MAAO,CACP,cAAe,QACf,eAAgB,OAFpB,SAGI2J,EAAQ7G,OACZ,cAAC,GAAD,CAAa8D,UAAW+C,EAAQrF,GAAIxF,KAAMT,EAAMS,KAAM0G,MAAOmE,EAAQnE,WARtE,cAAC,EAAD,K,SCnCTlF,GAAOvC,kBAAOuM,KAAPvM,CAAH,wIAkCKwM,I,GAAAA,GAzBf,SAAelM,GAMX,OACI,gCACI,yCACA,mBACImC,KAAMK,OAAOC,SAAS0J,OAAS,eADnC,SAGI,cAAC,GAAD,CAEIpK,KAAM,GACNJ,MAAO,CACHK,OAAQ,UACRH,UAAW,kBCb7BuK,GAAmB1M,kBAAO2M,sBAAP3M,CAAH,oFACT,SAACM,GAAD,OAAWA,EAAM8D,WA8CfwI,GA1CH,WAAO,IAAD,EAEQnM,mBAAS,IAFjB,mBAETM,EAFS,KAEH8L,EAFG,OAGUpM,mBAAS,MAHnB,mBAGFG,GAHE,WAqBhB,OAhBAC,qBAAU,WACRC,MAAM,aACHE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC0L,EAAQ1L,EAAM,SAKhB,SAACC,GACCR,EAASQ,QAGd,IAGD,8BACE,eAAC,gBAAD,CAAe0L,oBAAqBJ,GAApC,UACE,cAAC,EAAD,CAAY3L,KAAMA,IAClB,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgM,KAAK,uBAAuBC,OAAQ,SAAC1M,GAAD,OAAW,cAAC,GAAD,aAASS,KAAMA,GAAUT,OAC/E,cAAC,IAAD,CAAOyM,KAAK,SAASE,UAAWT,KAChC,cAAC,IAAD,CAAOO,KAAK,IAAZ,SACE,cAAC,EAAD,iBCxCCG,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpM,MAAK,YAAkD,IAA/CqM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,GAAD,MAEF3C,SAASC,eAAe,SAM1BiC,O","file":"static/js/main.b3f9d02b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Ul = styled.ul`\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`\r\n\r\nconst Li = styled.li`\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n`\r\n\r\nconst MyDiv = styled.div`\r\n  border-bottom: 1px solid #efefef;\r\n  color: ${props => props.active ? 'rgba(218, 135, 196)' : '#333'};\r\n  display: block;\r\n  font-family: Helvetica, Arial, sans-serif;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  margin-left: 18px;\r\n  padding: 18px 18px 18px 5px;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: background 200ms ease-in-out;\r\n  &:hover {\r\n    color: rgba(218, 135, 196);\r\n  }\r\n`\r\n\r\nfunction List(props) {\r\n\r\n  const [userPreference, setUserPreference] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  function putUserPreference(event) {\r\n    setUserPreference(event.target.value)\r\n    fetch('/v1/mailer/preferences', {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        user: props.user,\r\n        is_mail_notification_on: (event.target.value == \"true\")\r\n\r\n      })\r\n    }).then(\r\n      (error) => {\r\n        setError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(`v1/mailer/preferences/${props.user}`)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          if (result[\"is_mail_notification_on\"] == null) {\r\n            setUserPreference(\"false\");\r\n          } else {\r\n            setUserPreference(result[\"is_mail_notification_on\"]);\r\n          }\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Ul>\r\n        <Li>\r\n          <MyDiv>\r\n            Mail notifications:\r\n            <select value={userPreference} onChange={putUserPreference}>\r\n              <option value=\"true\">On</option>\r\n              <option value=\"false\">Off</option>\r\n            </select>\r\n          </MyDiv>\r\n        </Li>\r\n      </Ul>\r\n    </>\r\n  )\r\n}\r\nexport default List","import React from 'react'\r\n\r\nimport { Close as CloseIcon } from '@styled-icons/remix-fill/Close'\r\n\r\nexport default ({ onClose }) => (\r\n    <div\r\n        style={{\r\n            padding: '10px 10px 20px 10px',\r\n            textAlign: 'right'\r\n        }}\r\n    >\r\n        <CloseIcon\r\n            onClick={onClose}\r\n            size={36}\r\n            style={{\r\n                cursor: 'pointer',\r\n                textAlign: 'center'\r\n            }}\r\n        />\r\n    </div>\r\n)","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { Github } from '@styled-icons/remix-fill/Github'\r\n\r\nconst Icon = styled(Github)`\r\n  ${'' /* bottom: 40px; */}\r\n  color: #fff;\r\n  ${'' /* left: 52px; */}\r\n  ${'' /* position: absolute; */}\r\n  transition: transform 200ms ease-in-out;\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`\r\n\r\nexport default () => (\r\n  <a\r\n    href='https://github.com/Peshowe/issue-tracker/'\r\n    target='_blank'\r\n    rel='noopener noreferrer'\r\n  >\r\n    <Icon size={36} />\r\n  </a>\r\n)","import React, { useState } from 'react'\r\n// import { useHistory } from \"react-router-dom\";\r\nimport styled from 'styled-components'\r\nimport { ArrowBack } from '@styled-icons/boxicons-regular/ArrowBack'\r\n\r\n\r\nconst Icon = styled(ArrowBack)`\r\n&:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`\r\n\r\nfunction BackButton(props) {\r\n\r\n    // const history = useHistory();\r\n\r\n    function goBack() {\r\n        // history.goBack();\r\n        if (window.location.pathname != \"/\") {\r\n            window.history.back();\r\n        }\r\n    }\r\n\r\n    return (<Icon\r\n        size={48}\r\n        style={{\r\n            borderRadius: '6px',\r\n            padding: '8px',\r\n            cursor: 'pointer',\r\n\r\n        }}\r\n        onClick={goBack}\r\n    />\r\n    )\r\n}\r\n\r\nexport default BackButton","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { LogOut } from '@styled-icons/boxicons-regular/LogOut'\r\n\r\n\r\nconst Icon = styled(LogOut)`\r\n&:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`\r\n\r\nfunction LogoutButton(props) {\r\n\r\n    function logout() {\r\n        fetch(\"/auth/logout\")\r\n            .then(\r\n                (result) => {\r\n                    window.location.reload();\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    window.location.reload();\r\n                }\r\n            )\r\n    }\r\n\r\n    return (\r\n        <span style={{\r\n            \"float\": \"right\",\r\n            \"paddingRight\": \"0.5em\"\r\n        }}>\r\n            Hi, {props.user}\r\n            <Icon\r\n                size={48}\r\n                style={{\r\n                    borderRadius: '6px',\r\n                    padding: '8px',\r\n                    cursor: 'pointer',\r\n\r\n                }}\r\n                onClick={logout}\r\n            />\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default LogoutButton","import React, { useState } from 'react'\r\n\r\nimport { Menu as BurgerIcon } from '@styled-icons/remix-fill/Menu'\r\nimport { Menu, Overlay, StyledOffCanvas } from 'styled-off-canvas'\r\n\r\nimport List from './List'\r\nimport Close from './Close'\r\nimport GitHub from './GitHub'\r\nimport BackButton from './BackButton'\r\nimport LogoutButton from './LogoutButton'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst MenuIcon = styled(BurgerIcon)`\r\n&:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`\r\n\r\nfunction ToggleMenu(props) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    let menu;\r\n    let buttons;\r\n\r\n    if (props.user == \"\") {\r\n        menu = <Menu />\r\n        buttons = <span></span>\r\n    } else {\r\n        menu = (<Menu>\r\n            <>\r\n                <Close onClose={() => setIsOpen(false)} />\r\n                <List user={props.user} />\r\n            </>\r\n        </Menu>)\r\n        buttons = (<span>\r\n            <BackButton />\r\n            <MenuIcon\r\n                size={48}\r\n                style={{\r\n                    borderRadius: '6px',\r\n                    padding: '8px',\r\n                    cursor: 'pointer'\r\n\r\n                }}\r\n                onClick={() => { setIsOpen((isOpen) => !isOpen) }}\r\n            />\r\n\r\n            <GitHub />\r\n\r\n            <LogoutButton user={props.user} />\r\n        </span>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <StyledOffCanvas\r\n                menuBackground='black'\r\n                isOpen={isOpen}\r\n                onClose={() => setIsOpen(false)}\r\n            >\r\n                {buttons}\r\n\r\n                <span style={{\r\n                    \"padding\": '8px',\r\n                    \"font-size\": \"1.7em\",\r\n                    \"margin-left\": \"1em\"\r\n                }}>Parvus JIRA</span>\r\n\r\n                {menu}\r\n\r\n\r\n                <Overlay />\r\n            </StyledOffCanvas>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ToggleMenu","import { FingerprintSpinner } from 'react-epic-spinners';\r\n\r\n\r\nfunction LoadSpinner() {\r\n    return (\r\n        <FingerprintSpinner color=\"red\"></FingerprintSpinner>\r\n    )\r\n}\r\n\r\nexport default LoadSpinner","import React, { useState, useEffect } from 'react';\r\nimport LoadSpinner from '../LoadSpinner';\r\n\r\nimport Modal from \"styled-react-modal\";\r\n\r\nconst StyledModal = Modal.styled`\r\n  width: 30rem;\r\n  height: 20rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: grey;\r\n  opacity: ${(props) => props.opacity};\r\n  transition : all 0.3s ease-in-out;`;\r\n\r\nfunction CreateProjectModal(props) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [opacity, setOpacity] = useState(0);\r\n    const [projectName, setProjectName] = useState(\"\")\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n    const [error, setError] = useState(null);\r\n\r\n    function toggleModal(e) {\r\n        setOpacity(0);\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    function afterOpen() {\r\n        setTimeout(() => {\r\n            setOpacity(1);\r\n        }, 100);\r\n    }\r\n\r\n    function beforeClose() {\r\n        return new Promise((resolve) => {\r\n            setOpacity(0);\r\n            setTimeout(resolve, 300);\r\n        });\r\n    }\r\n\r\n    function handleChange(event) {\r\n        setProjectName(event.target.value)\r\n    }\r\n\r\n    function postProject() {\r\n        setIsSubmitting(true)\r\n        fetch('/v1/projects', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: projectName\r\n            })\r\n        })\r\n            // .then(res => res.json)\r\n            .then(\r\n                (result) => {\r\n                    setIsSubmitting(false);\r\n                    //close the modal\r\n                    setIsOpen(false);\r\n                    props.onCreate();\r\n\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setIsSubmitting(false)\r\n                    setError(error);\r\n                }\r\n            );\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                \"padding\": \"1.5em\"\r\n            }}\r\n        >\r\n            <button onClick={toggleModal} className=\"btn btn-primary\">New Project</button>\r\n            <StyledModal\r\n                isOpen={isOpen}\r\n                afterOpen={afterOpen}\r\n                beforeClose={beforeClose}\r\n                onBackgroundClick={toggleModal}\r\n                onEscapeKeydown={toggleModal}\r\n                opacity={opacity}\r\n                backgroundProps={{ opacity }}\r\n            >\r\n                {(() => {\r\n\r\n                    if (isSubmitting) {\r\n                        return <LoadSpinner />\r\n                    } else if (error) {\r\n                        return <div>Error: {error.message}</div>;\r\n                    } else {\r\n                        return (<div>\r\n                            <form>\r\n                                <label>Project Name: </label>\r\n                                <input type=\"text\" value={projectName} onChange={handleChange} />\r\n                            </form>\r\n\r\n                            <button onClick={postProject} className=\"btn btn-primary\">Create</button>\r\n                        </div>)\r\n                    }\r\n                })()}\r\n\r\n            </StyledModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateProjectModal","import React, { useState, useEffect } from 'react';\r\nimport LoadSpinner from '../LoadSpinner';\r\n\r\nimport CreateProjectModal from './CreateProject'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nfunction ProjectExplorer() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    // Note: the empty deps array [] means \r\n    // this useEffect will run once\r\n    // similar to componentDidMount()\r\n    function fetchProjects() {\r\n        fetch(\"/v1/projects\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    if (result.projects != undefined) {\r\n                        setProjects(result.projects);\r\n                    }\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }\r\n    useEffect(() => {\r\n        fetchProjects()\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <LoadSpinner />;\r\n    } else {\r\n        return (\r\n            <div>\r\n\r\n                <CreateProjectModal onCreate={fetchProjects} />\r\n                {projects.map(item => (\r\n\r\n                    <div className=\"listItem\"><Link to={`/projects/${item.id}`} className=\"btn btn-primary\">{item.name}</Link></div>\r\n\r\n\r\n                ))}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ProjectExplorer;","import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\n\r\n\r\nfunction IssueForm(props) {\r\n    const [issue, setIssue] = useState({});\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [issueType, setIssueType] = useState(\"feature\");\r\n    const [bugTrace, setBugTrace] = useState(\"\");\r\n    const [owner, setOwner] = useState(null);\r\n\r\n    function onClick() {\r\n        //wrap the issue's attributes in a single object and pass it to the handler\r\n        issue.name = name;\r\n        issue.desc = description;\r\n        issue.issue_type = issueType;\r\n        issue.bug_trace = bugTrace;\r\n        issue.user = owner;\r\n        setIssue(issue);\r\n        props.buttonHandler(issue);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.issue != null) {\r\n            // if an issue was passed as a prop, use its attributes to populate the fields\r\n            setIssue(props.issue)\r\n            if (\"name\" in props.issue) {\r\n                setName(props.issue.name);\r\n            }\r\n            if (\"desc\" in props.issue) {\r\n                setDescription(props.issue.desc);\r\n            }\r\n            if (\"issue_type\" in props.issue) {\r\n                setIssueType(props.issue.issue_type);\r\n            }\r\n            if (\"bug_trace\" in props.issue) {\r\n                setBugTrace(props.issue.bug_trace);\r\n            }\r\n            if (\"user\" in props.issue) {\r\n                setOwner(props.issue.user);\r\n            } else {\r\n                setOwner(\"\");\r\n            }\r\n        } else {\r\n            //if no issue was passed, then we're creating a new issue\r\n            // set some default values\r\n            setOwner(props.user)\r\n        }\r\n    }, [])\r\n\r\n    const ownerOptions = [];\r\n    props.users.forEach(el => ownerOptions.push({ value: el, label: el }));\r\n\r\n    let ownerSelect;\r\n\r\n    if (owner != null) {\r\n\r\n        ownerSelect = (<Select\r\n            defaultValue={{ \"value\": owner, \"label\": owner }}\r\n            options={ownerOptions}\r\n            className=\"basic-multi-select\"\r\n            classNamePrefix=\"select\"\r\n            onChange={e => setOwner(e.value)}\r\n        />)\r\n    }\r\n\r\n    return (<div\r\n        style={{\r\n            // \"height\": \"70%\",\r\n            // \"width\": \"70%\"\r\n        }}\r\n    >\r\n        <form>\r\n            <div>\r\n                <label>Name: </label>\r\n                <input type=\"text\" value={name} onChange={e => setName(e.target.value)} />\r\n\r\n                <label>Issue type: </label>\r\n                <select value={issueType} onChange={e => setIssueType(e.target.value)}>\r\n                    <option value=\"bug\">Bug</option>\r\n                    <option value=\"feature\">Feature</option>\r\n                    <option value=\"adhoc\">Ad Hoc</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div>\r\n                <label>Description: </label>\r\n                <br />\r\n                <textarea className=\"inputArea\" value={description} onChange={e => setDescription(e.target.value)} />\r\n\r\n\r\n            </div>\r\n            <div>\r\n                <label>Bug trace: </label>\r\n                <br />\r\n                <textarea className=\"inputArea\" value={bugTrace} onChange={e => setBugTrace(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                <label>Owner: </label>\r\n                {ownerSelect}\r\n                <br />\r\n            </div>\r\n        </form>\r\n\r\n        <button onClick={onClick} className=\"btn btn-primary\">{props.buttonLabel}</button>\r\n    </div>)\r\n}\r\n\r\nexport default IssueForm;","import React, { useState, useEffect } from 'react';\r\nimport LoadSpinner from '../LoadSpinner';\r\n\r\nimport IssueForm from \"./IssueForm\";\r\n\r\nimport Modal from \"styled-react-modal\";\r\n\r\nconst StyledModal = Modal.styled`\r\n  width: 70rem;\r\n  height: 40rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: grey;\r\n  opacity: ${(props) => props.opacity};\r\n  transition : all 0.3s ease-in-out;`;\r\n\r\nfunction IssueModal(props) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [opacity, setOpacity] = useState(0);\r\n\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n    const [error, setError] = useState(null);\r\n\r\n    function toggleModal(e) {\r\n        e.stopPropagation();\r\n        setOpacity(0);\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    function afterOpen() {\r\n        setTimeout(() => {\r\n            setOpacity(1);\r\n        }, 100);\r\n    }\r\n\r\n    function beforeClose() {\r\n        return new Promise((resolve) => {\r\n            setOpacity(0);\r\n            setTimeout(resolve, 300);\r\n        });\r\n    }\r\n\r\n    function onSubmit(issue) {\r\n        setIsSubmitting(true);\r\n        props.onSubmit(issue)\r\n            .then(\r\n                (result) => {\r\n                    setIsSubmitting(false)\r\n                    //close the modal\r\n                    setIsOpen(false);\r\n                    props.onDone();\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setIsSubmitting(false)\r\n                    setError(error);\r\n                }\r\n            );\r\n    }\r\n\r\n    const submitLabel = props.issue == null ? \"Create Issue\" : \"Update Issue\"\r\n    const toggleLabel = props.issue == null ? \"New Issue\" : props.issue.name\r\n\r\n    return (\r\n        <\r\n            // style={{\r\n            //     \"padding\": \"1.5em\"\r\n            // }}\r\n            >\r\n            <button onClick={toggleModal} className=\"btn btn-primary\">{toggleLabel}</button>\r\n            <StyledModal\r\n                isOpen={isOpen}\r\n                afterOpen={afterOpen}\r\n                beforeClose={beforeClose}\r\n                onBackgroundClick={toggleModal}\r\n                onEscapeKeydown={toggleModal}\r\n                opacity={opacity}\r\n                backgroundProps={{ opacity }}\r\n            >\r\n                {(() => {\r\n\r\n                    if (isSubmitting) {\r\n                        return <LoadSpinner />\r\n                    } else if (error) {\r\n                        return <div>Error: {error.message}</div>;\r\n                    } else {\r\n                        return <IssueForm buttonHandler={onSubmit} buttonLabel={submitLabel} issue={props.issue} user={props.user} users={props.users} />\r\n                    }\r\n                })()}\r\n\r\n            </StyledModal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IssueModal;","import React, { useState, useEffect } from 'react';\r\nimport LoadSpinner from '../LoadSpinner';\r\n\r\nimport Modal from \"styled-react-modal\";\r\n\r\nconst StyledModal = Modal.styled`\r\n  width: 30rem;\r\n  height: 20rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: grey;\r\n  opacity: ${(props) => props.opacity};\r\n  transition : all 0.3s ease-in-out;`;\r\n\r\nfunction AddUserModal(props) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [opacity, setOpacity] = useState(0);\r\n    const [newUser, setNewUser] = useState(\"\")\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n    const [error, setError] = useState(null);\r\n\r\n    function toggleModal(e) {\r\n        setOpacity(0);\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    function afterOpen() {\r\n        setTimeout(() => {\r\n            setOpacity(1);\r\n        }, 100);\r\n    }\r\n\r\n    function beforeClose() {\r\n        return new Promise((resolve) => {\r\n            setOpacity(0);\r\n            setTimeout(resolve, 300);\r\n        });\r\n    }\r\n\r\n    function handleChange(event) {\r\n        setNewUser(event.target.value)\r\n    }\r\n\r\n    function postUser() {\r\n        setIsSubmitting(true)\r\n        fetch('/v1/projects/users', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                projectId: props.projectId,\r\n                userId: newUser\r\n            })\r\n        })\r\n            // .then(res => res.json)\r\n            .then(\r\n                (result) => {\r\n                    setIsSubmitting(false);\r\n                    //close the modal\r\n                    setIsOpen(false);\r\n                    // props.onCreate();\r\n\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setIsSubmitting(false)\r\n                    setError(error);\r\n                }\r\n            );\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <\r\n\r\n            >\r\n            <button onClick={toggleModal} className=\"btn btn-primary\" style={{ \"margin\": \"0.5em\" }}>Add User</button>\r\n            <StyledModal\r\n                isOpen={isOpen}\r\n                afterOpen={afterOpen}\r\n                beforeClose={beforeClose}\r\n                onBackgroundClick={toggleModal}\r\n                onEscapeKeydown={toggleModal}\r\n                opacity={opacity}\r\n                backgroundProps={{ opacity }}\r\n            >\r\n                {(() => {\r\n\r\n                    if (isSubmitting) {\r\n                        return <LoadSpinner />\r\n                    } else if (error) {\r\n                        return <div>Error: {error.message}</div>;\r\n                    } else {\r\n                        return (<div>\r\n                            <form>\r\n                                <label>User: </label>\r\n                                <input type=\"text\" value={newUser} onChange={handleChange} />\r\n                            </form>\r\n\r\n                            <button onClick={postUser} className=\"btn btn-primary\">Add</button>\r\n                        </div>)\r\n                    }\r\n                })()}\r\n\r\n            </StyledModal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddUserModal","import React, { useState, useEffect } from 'react';\r\nimport LoadSpinner from '../LoadSpinner';\r\n\r\nimport Modal from \"styled-react-modal\";\r\n\r\nconst StyledModal = Modal.styled`\r\n  width: 30rem;\r\n  height: 20rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: grey;\r\n  opacity: ${(props) => props.opacity};\r\n  transition : all 0.3s ease-in-out;`;\r\n\r\nfunction LeaveProjectModal(props) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [opacity, setOpacity] = useState(0);\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n    const [error, setError] = useState(null);\r\n\r\n    function toggleModal(e) {\r\n        setOpacity(0);\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    function afterOpen() {\r\n        setTimeout(() => {\r\n            setOpacity(1);\r\n        }, 100);\r\n    }\r\n\r\n    function beforeClose() {\r\n        return new Promise((resolve) => {\r\n            setOpacity(0);\r\n            setTimeout(resolve, 300);\r\n        });\r\n    }\r\n\r\n    function deleteUser() {\r\n        setIsSubmitting(true)\r\n        fetch('/v1/projects/users', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                projectId: props.projectId,\r\n                userId: props.user\r\n            })\r\n        })\r\n            // .then(res => res.json)\r\n            .then(\r\n                (result) => {\r\n                    setIsSubmitting(false);\r\n                    //close the modal\r\n                    setIsOpen(false);\r\n                    // props.onCreate();\r\n\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setIsSubmitting(false)\r\n                    setError(error);\r\n                }\r\n            );\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <\r\n\r\n            >\r\n            <button onClick={toggleModal} className=\"btn btn-primary\" style={{ \"float\": \"right\" }}>Leave Project</button>\r\n            <StyledModal\r\n                isOpen={isOpen}\r\n                afterOpen={afterOpen}\r\n                beforeClose={beforeClose}\r\n                onBackgroundClick={toggleModal}\r\n                onEscapeKeydown={toggleModal}\r\n                opacity={opacity}\r\n                backgroundProps={{ opacity }}\r\n            >\r\n                {(() => {\r\n\r\n                    if (isSubmitting) {\r\n                        return <LoadSpinner />\r\n                    } else if (error) {\r\n                        return <div>Error: {error.message}</div>;\r\n                    } else {\r\n                        return (<div>\r\n                            Are you sure you want to leave the project?\r\n\r\n                            <button onClick={deleteUser} className=\"btn btn-primary\">Yes, leave</button>\r\n                        </div>)\r\n                    }\r\n                })()}\r\n\r\n            </StyledModal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LeaveProjectModal","import React, { useState, useEffect } from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport LoadSpinner from '../LoadSpinner';\r\nimport IssueModal from './IssueModal';\r\nimport AddUserModal from '../Project/AddUser';\r\nimport LeaveProjectModal from '../Project/LeaveProject';\r\n\r\nfunction IssuesBoard(props) {\r\n\r\n    const [error, setError] = useState(null);\r\n    const [issuesLoaded, setIssuesLoaded] = useState(false);\r\n\r\n    //arrays where the issues will be stored depending on their statuses\r\n    const [toDo, setToDo] = useState([]);\r\n    const [inProgress, setInProgress] = useState([]);\r\n    const [done, setDone] = useState([]);\r\n\r\n    const statusCols = [\"todo_col\", \"inprogress_col\", \"done_col\"];\r\n    const statusVals = [\"to do\", \"in progress\", \"done\"];\r\n\r\n\r\n    //pop the given issue from its current status array\r\n    function popIssue(issue) {\r\n        if (issue.status == \"to do\") {\r\n            setToDo(toDo.filter(is => is.id != issue.id));\r\n        } else if (issue.status == \"in progress\") {\r\n            setInProgress(inProgress.filter(is => is.id != issue.id));\r\n        } else if (issue.status == \"done\") {\r\n            setDone(done.filter(is => is.id != issue.id));\r\n        }\r\n    }\r\n\r\n    //push the given issue into a status array based on its current status\r\n    function pushIssue(issue) {\r\n\r\n        if (issue.status == \"to do\") {\r\n            setToDo([...toDo, issue]);\r\n        } else if (issue.status == \"in progress\") {\r\n            setInProgress([...inProgress, issue]);\r\n        } else if (issue.status == \"done\") {\r\n            setDone([...done, issue]);\r\n        }\r\n    }\r\n\r\n    function postIssue(issue) {\r\n        return fetch('/v1/issues', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                issue: {\r\n                    name: issue.name,\r\n                    desc: issue.desc,\r\n                    issue_type: issue.issue_type,\r\n                    bug_trace: issue.bug_trace,\r\n                    status: \"to do\",\r\n                    project: props.projectId,\r\n                    user: issue.user\r\n                }\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n    function putIssue(issue) {\r\n        return fetch('/v1/issues', {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                issue: issue\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n    function putStatus(issue, status) {\r\n        popIssue(issue);\r\n        issue.status = status;\r\n        pushIssue(issue);\r\n\r\n        setIssuesLoaded(false);\r\n        putIssue(issue)\r\n            .then(\r\n                (result) => {\r\n\r\n                    setIssuesLoaded(true);\r\n                },\r\n                (error) => {\r\n                    setIssuesLoaded(true);\r\n                    setError(error);\r\n                }\r\n            );\r\n    }\r\n\r\n\r\n    //handler when we stop dragging an issue\r\n    function onStop(e, issue) {\r\n        //check in which column we've dragged the issue\r\n        e.stopPropagation(); //stop other handlers from triggering\r\n        let i;\r\n        for (i = 0; i < statusCols.length; i++) {\r\n\r\n            let bounds = document.getElementById(statusCols[i]).getBoundingClientRect();\r\n\r\n            if ((e.clientX > bounds.left) && (e.clientX < bounds.right)) {\r\n                console.log(\"In \" + statusVals[i]);\r\n\r\n                // putStatus(issue, statusVals[i]);\r\n\r\n                if (issue.status == statusVals[i]) {\r\n                    //TODO: reset if not in a known column or in same column\r\n                    setToDo(toDo);\r\n                    console.log(\"no change\");\r\n                } else {\r\n                    // issue.status = statusVals[i];\r\n                    putStatus(issue, statusVals[i]);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    function fetchIssues() {\r\n        fetch(`/v1/issues/byproject/${props.projectId}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIssuesLoaded(true);\r\n\r\n                    if (result[\"issues\"] != undefined) {\r\n                        let issues = result[\"issues\"];\r\n                        issues.sort((a, b) => a.last_modified_on - b.last_modified_on);\r\n                        // setIssues(issues);\r\n\r\n                        setToDo(issues.filter(issue => issue.status == \"to do\"));\r\n                        setInProgress(issues.filter(issue => issue.status == \"in progress\"));\r\n                        setDone(issues.filter(issue => issue.status == \"done\"));\r\n                    }\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setIssuesLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    function createDraggableIssues(issues) {\r\n        const draggableIssues = []\r\n        for (const [index, value] of issues.entries()) {\r\n            draggableIssues.push(<Draggable bounds=\"#board\" onDrag={(e) => onStop(e, value)} ><div className=\"listItem\"><IssueModal issue={value} user={props.user} users={props.users} onSubmit={putIssue} onDone={() => \"\"} /></div></Draggable>);\r\n        }\r\n\r\n        return draggableIssues;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchIssues();\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!issuesLoaded) {\r\n        return <LoadSpinner />;\r\n    } else {\r\n\r\n        const toDoComponents = createDraggableIssues(toDo);\r\n        const inProgressComponents = createDraggableIssues(inProgress);\r\n        const doneComponents = createDraggableIssues(done);\r\n\r\n        return (\r\n            <div\r\n                style={\r\n                    { \"padding\": \"1.5em\" }\r\n                }>\r\n                <div>\r\n                    <IssueModal projectId={props.projectId} user={props.user} users={props.users} onSubmit={postIssue} issue={null} onDone={fetchIssues} />\r\n                    <AddUserModal projectId={props.projectId} />\r\n                    <LeaveProjectModal projectId={props.projectId} user={props.user} />\r\n                </div>\r\n                <br />\r\n                <div id=\"board\" className=\"row\" style={{ position: 'relative', overflow: 'auto', padding: '0' }}>\r\n                    <div id={statusCols[0]} className=\"column\">\r\n                        To Do\r\n                    {toDoComponents}\r\n                    </div>\r\n                    <div id={statusCols[1]} className=\"column\">\r\n                        In progress\r\n                    {inProgressComponents}\r\n                    </div>\r\n                    <div id={statusCols[2]} className=\"column\">\r\n                        Done\r\n                    {doneComponents}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default IssuesBoard","import React, { useState, useEffect } from 'react';\r\nimport LoadSpinner from '../LoadSpinner';\r\nimport IssuesBoard from '../Issue/IssuesBoard'\r\n\r\nfunction Project(props) {\r\n    const [error, setError] = useState(null);\r\n    const [projectLoaded, setProjectLoaded] = useState(false);\r\n    const [project, setProject] = useState(null);\r\n\r\n    function fetchProject() {\r\n        fetch(`/v1/projects/byid/${props.match.params.projectId}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setProject(result);\r\n                    setProjectLoaded(true);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setProjectLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }\r\n\r\n\r\n\r\n    // Note: the empty deps array [] means \r\n    // this useEffect will run once\r\n    // similar to componentDidMount()\r\n    useEffect(() => {\r\n        fetchProject();\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!projectLoaded) {\r\n        return <LoadSpinner />;\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h2 style={{\r\n                    \"padding-top\": \"0.5em\",\r\n                    \"padding-left\": \"1em\"\r\n                }}>{project.name}</h2>\r\n                <IssuesBoard projectId={project.id} user={props.user} users={project.users} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Project","\r\nimport { Google } from '@styled-icons/boxicons-logos/Google';\r\nimport styled from 'styled-components'\r\n\r\nconst Icon = styled(Google)`\r\n  color: #fff;\r\n  transition: transform 200ms ease-in-out;\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    // function loginRedirect() {\r\n    //     props.history.push(\"/auth/google\");\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Login: </h3>\r\n            <a\r\n                href={window.location.origin + \"/auth/google\"}\r\n            >\r\n                <Icon\r\n                    // onClick={loginRedirect}\r\n                    size={36}\r\n                    style={{\r\n                        cursor: 'pointer',\r\n                        textAlign: 'center'\r\n                    }}\r\n                />\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import './App.css';\n\nimport ToggleMenu from './ToggleMenu/ToggleMenu'\n\nimport React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n\nimport ProjectExplorer from './Project/ProjectExplorer';\nimport Project from './Project/Project';\n\nimport Login from './Login/Login';\n\nimport { ModalProvider, BaseModalBackground } from \"styled-react-modal\";\n\nconst FadingBackground = styled(BaseModalBackground)`\n  opacity: ${(props) => props.opacity};\n  transition: all 0.3s ease-in-out;\n`;\n\nconst App = () => {\n\n  const [user, setUser] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(\"auth/user\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setUser(result[\"user\"]);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setError(error);\n        }\n      )\n  }, [])\n\n  return (\n    <div>\n      <ModalProvider backgroundComponent={FadingBackground}>\n        <ToggleMenu user={user} />\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/projects/:projectId\" render={(props) => <Project user={user} {...props} />} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/\">\n              <ProjectExplorer />\n            </Route>\n\n          </Switch>\n        </BrowserRouter>\n      </ModalProvider>\n    </div>\n\n\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}