{"version":3,"sources":["logo.svg","ToggleMenu/List.js","ToggleMenu/Close.js","ToggleMenu/GitHub.js","ToggleMenu/BackButton.js","ToggleMenu/ToggleMenu.js","LoadSpinner.js","Project/CreateProject.js","Project/ProjectExplorer.js","Issue/IssueForm.js","Issue/IssueModal.js","Issue/IssuesBoard.js","Project/Project.js","Login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["Ul","styled","ul","Li","li","A","a","props","active","List","href","onClose","style","padding","textAlign","onClick","size","cursor","Icon","Github","target","rel","ArrowBack","BackButton","borderRadius","window","location","pathname","history","back","MenuIcon","BurgerIcon","ToggleMenu","useState","isOpen","setIsOpen","menuBackground","GitHub","Close","LoadSpinner","color","StyledModal","Modal","opacity","CreateProjectModal","setOpacity","projectName","setProjectName","isSubmitting","setIsSubmitting","error","setError","toggleModal","e","handleChange","event","value","postProject","fetch","method","headers","Accept","body","JSON","stringify","name","then","result","onCreate","className","afterOpen","setTimeout","beforeClose","Promise","resolve","onBackgroundClick","onEscapeKeydown","backgroundProps","message","type","onChange","ProjectExplorer","isLoaded","setIsLoaded","projects","setProjects","fetchProjects","res","json","useEffect","CreateProject","map","item","to","id","IssueForm","issue","setIssue","setName","description","setDescription","issueType","setIssueType","bugTrace","setBugTrace","desc","issue_type","bug_trace","console","log","buttonHandler","buttonLabel","IssueModal","stopPropagation","onSubmit","onDone","submitLabel","toggleLabel","IssuesBoard","issuesLoaded","setIssuesLoaded","toDo","setToDo","inProgress","setInProgress","done","setDone","statusCols","statusVals","putIssue","putStatus","status","filter","is","popIssue","pushIssue","fetchIssues","projectId","undefined","issues","sort","b","last_modified_on","createDraggableIssues","draggableIssues","entries","push","bounds","onDrag","i","length","document","getElementById","getBoundingClientRect","clientX","left","right","onStop","toDoComponents","inProgressComponents","doneComponents","project","position","overflow","Project","projectLoaded","setProjectLoaded","setProject","match","params","Google","Login","origin","FadingBackground","BaseModalBackground","App","backgroundComponent","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.262ef5f7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Ul = styled.ul`\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`\r\n\r\nconst Li = styled.li`\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n`\r\n\r\nconst A = styled.a`\r\n  border-bottom: 1px solid #efefef;\r\n  color: ${props => props.active ? 'rgba(218, 135, 196)' : '#333'};\r\n  display: block;\r\n  font-family: Helvetica, Arial, sans-serif;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  margin-left: 18px;\r\n  padding: 18px 18px 18px 5px;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: background 200ms ease-in-out;\r\n  &:hover {\r\n    color: rgba(218, 135, 196);\r\n  }\r\n`\r\n\r\nconst List = () => (\r\n    <>\r\n        <Ul>\r\n            <Li>\r\n                <A active href='#'>Home</A>\r\n            </Li>\r\n            <Li>\r\n                <A href='#'>About</A>\r\n            </Li>\r\n            <Li>\r\n                <A href='#'>Work</A>\r\n            </Li>\r\n            <Li>\r\n                <A href='#'>Contact</A>\r\n            </Li>\r\n        </Ul>\r\n    </>\r\n)\r\n\r\nexport default List","import React from 'react'\r\n\r\nimport { Close as CloseIcon } from '@styled-icons/remix-fill/Close'\r\n\r\nexport default ({ onClose }) => (\r\n    <div\r\n        style={{\r\n            padding: '10px 10px 20px 10px',\r\n            textAlign: 'right'\r\n        }}\r\n    >\r\n        <CloseIcon\r\n            onClick={onClose}\r\n            size={36}\r\n            style={{\r\n                cursor: 'pointer',\r\n                textAlign: 'center'\r\n            }}\r\n        />\r\n    </div>\r\n)","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { Github } from '@styled-icons/remix-fill/Github'\r\n\r\nconst Icon = styled(Github)`\r\n  ${'' /* bottom: 40px; */}\r\n  color: #fff;\r\n  ${'' /* left: 52px; */}\r\n  ${'' /* position: absolute; */}\r\n  transition: transform 200ms ease-in-out;\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`\r\n\r\nexport default () => (\r\n  <a\r\n    href='https://github.com/Peshowe/issue-tracker/'\r\n    target='_blank'\r\n    rel='noopener noreferrer'\r\n  >\r\n    <Icon size={36} />\r\n  </a>\r\n)","import React, { useState } from 'react'\r\n// import { useHistory } from \"react-router-dom\";\r\nimport styled from 'styled-components'\r\nimport { ArrowBack } from '@styled-icons/boxicons-regular/ArrowBack'\r\n\r\n\r\nconst Icon = styled(ArrowBack)`\r\n&:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`\r\n\r\nfunction BackButton(props) {\r\n\r\n    // const history = useHistory();\r\n\r\n    function goBack() {\r\n        // history.goBack();\r\n        if (window.location.pathname != \"/\") {\r\n            window.history.back();\r\n        }\r\n    }\r\n\r\n    return (<Icon\r\n        size={48}\r\n        style={{\r\n            borderRadius: '6px',\r\n            padding: '8px',\r\n            cursor: 'pointer',\r\n\r\n        }}\r\n        onClick={goBack}\r\n    />\r\n    )\r\n}\r\n\r\nexport default BackButton","import React, { useState } from 'react'\r\n\r\nimport { Menu as BurgerIcon } from '@styled-icons/remix-fill/Menu'\r\nimport { Menu, Overlay, StyledOffCanvas } from 'styled-off-canvas'\r\n\r\nimport List from './List'\r\nimport Close from './Close'\r\nimport GitHub from './GitHub'\r\nimport BackButton from './BackButton'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst MenuIcon = styled(BurgerIcon)`\r\n&:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`\r\n\r\nfunction ToggleMenu() {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n            <StyledOffCanvas\r\n                menuBackground='black'\r\n                isOpen={isOpen}\r\n                onClose={() => setIsOpen(false)}\r\n            >\r\n                <BackButton />\r\n                <MenuIcon\r\n                    size={48}\r\n                    style={{\r\n                        borderRadius: '6px',\r\n                        padding: '8px',\r\n                        cursor: 'pointer'\r\n\r\n                    }}\r\n                    onClick={() => { setIsOpen((isOpen) => !isOpen) }}\r\n                />\r\n\r\n                <GitHub />\r\n\r\n                <span style={{\r\n                    \"padding\": '8px',\r\n                    \"font-size\": \"1.7em\",\r\n                    \"margin-left\": \"1em\"\r\n                }}>Parvus JIRA</span>\r\n\r\n                <Menu>\r\n                    <>\r\n                        <Close onClose={() => setIsOpen(false)} />\r\n                        <List />\r\n                    </>\r\n                </Menu>\r\n\r\n                <Overlay />\r\n            </StyledOffCanvas>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ToggleMenu","import { FingerprintSpinner } from 'react-epic-spinners';\r\n\r\n\r\nfunction LoadSpinner() {\r\n    return (\r\n        <FingerprintSpinner color=\"red\"></FingerprintSpinner>\r\n    )\r\n}\r\n\r\nexport default LoadSpinner","import React, { useState, useEffect } from 'react';\r\nimport LoadSpinner from '../LoadSpinner';\r\n\r\nimport Modal from \"styled-react-modal\";\r\n\r\nconst StyledModal = Modal.styled`\r\n  width: 30rem;\r\n  height: 20rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: grey;\r\n  opacity: ${(props) => props.opacity};\r\n  transition : all 0.3s ease-in-out;`;\r\n\r\nfunction CreateProjectModal(props) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [opacity, setOpacity] = useState(0);\r\n    const [projectName, setProjectName] = useState(\"\")\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n    const [error, setError] = useState(null);\r\n\r\n    function toggleModal(e) {\r\n        setOpacity(0);\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    function afterOpen() {\r\n        setTimeout(() => {\r\n            setOpacity(1);\r\n        }, 100);\r\n    }\r\n\r\n    function beforeClose() {\r\n        return new Promise((resolve) => {\r\n            setOpacity(0);\r\n            setTimeout(resolve, 300);\r\n        });\r\n    }\r\n\r\n    function handleChange(event) {\r\n        setProjectName(event.target.value)\r\n    }\r\n\r\n    function postProject() {\r\n        setIsSubmitting(true)\r\n        fetch('/v1/projects', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: projectName\r\n            })\r\n        })\r\n            // .then(res => res.json)\r\n            .then(\r\n                (result) => {\r\n                    setIsSubmitting(false);\r\n                    //close the modal\r\n                    setIsOpen(false);\r\n                    props.onCreate();\r\n\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setIsSubmitting(false)\r\n                    setError(error);\r\n                }\r\n            );\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                \"padding\": \"1.5em\"\r\n            }}\r\n        >\r\n            <button onClick={toggleModal} className=\"btn btn-primary\">New Project</button>\r\n            <StyledModal\r\n                isOpen={isOpen}\r\n                afterOpen={afterOpen}\r\n                beforeClose={beforeClose}\r\n                onBackgroundClick={toggleModal}\r\n                onEscapeKeydown={toggleModal}\r\n                opacity={opacity}\r\n                backgroundProps={{ opacity }}\r\n            >\r\n                {(() => {\r\n\r\n                    if (isSubmitting) {\r\n                        return <LoadSpinner />\r\n                    } else if (error) {\r\n                        return <div>Error: {error.message}</div>;\r\n                    } else {\r\n                        return (<div>\r\n                            <form>\r\n                                <label>Project Name: </label>\r\n                                <input type=\"text\" value={projectName} onChange={handleChange} />\r\n                            </form>\r\n\r\n                            <button onClick={postProject} className=\"btn btn-primary\">Create</button>\r\n                        </div>)\r\n                    }\r\n                })()}\r\n\r\n            </StyledModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateProjectModal","import React, { useState, useEffect } from 'react';\r\nimport LoadSpinner from '../LoadSpinner';\r\n\r\nimport CreateProjectModal from './CreateProject'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nfunction ProjectExplorer() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    // Note: the empty deps array [] means \r\n    // this useEffect will run once\r\n    // similar to componentDidMount()\r\n    function fetchProjects() {\r\n        fetch(\"/v1/projects\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setProjects(result.projects);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }\r\n    useEffect(() => {\r\n        fetchProjects()\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <LoadSpinner />;\r\n    } else {\r\n        return (\r\n            <div>\r\n\r\n                <CreateProjectModal onCreate={fetchProjects} />\r\n                {projects.map(item => (\r\n\r\n                    <div className=\"listItem\"><Link to={`/projects/${item.id}`} className=\"btn btn-primary\">{item.name}</Link></div>\r\n\r\n\r\n                ))}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ProjectExplorer;","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nfunction IssueForm(props) {\r\n    const [issue, setIssue] = useState({});\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [issueType, setIssueType] = useState(\"feature\");\r\n    const [bugTrace, setBugTrace] = useState(\"\");\r\n\r\n\r\n    function onClick() {\r\n        //wrap the issue's attributes in a single object and pass it to the handler\r\n        issue.name = name;\r\n        issue.desc = description;\r\n        issue.issue_type = issueType;\r\n        issue.bug_trace = bugTrace;\r\n        console.log(issue);\r\n        console.log(description);\r\n        setIssue(issue);\r\n        props.buttonHandler(issue);\r\n    }\r\n\r\n    useEffect(() => {\r\n        // if an issue was passed as a prop, use its attributes to populate the fields\r\n        if (props.issue != null) {\r\n            setIssue(props.issue)\r\n            if (\"name\" in props.issue) {\r\n                setName(props.issue.name);\r\n            }\r\n            if (\"desc\" in props.issue) {\r\n                setDescription(props.issue.desc);\r\n            }\r\n            if (\"issue_type\" in props.issue) {\r\n                setIssueType(props.issue.issue_type);\r\n            }\r\n            if (\"bug_trace\" in props.issue) {\r\n                setBugTrace(props.issue.bug_trace);\r\n            }\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (<div\r\n        style={{\r\n            // \"height\": \"70%\",\r\n            // \"width\": \"70%\"\r\n        }}\r\n    >\r\n        <form>\r\n            <div>\r\n                <label>Name: </label>\r\n                <input type=\"text\" value={name} onChange={e => setName(e.target.value)} />\r\n\r\n                <label>Issue type: </label>\r\n                <select value={issueType} onChange={e => setIssueType(e.target.value)}>\r\n                    <option value=\"bug\">Bug</option>\r\n                    <option value=\"feature\">Feature</option>\r\n                    <option value=\"adhoc\">Ad Hoc</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div>\r\n                <label>Description: </label>\r\n                <br />\r\n                <textarea className=\"inputArea\" value={description} onChange={e => setDescription(e.target.value)} />\r\n\r\n\r\n            </div>\r\n            <div>\r\n                <label>Bug trace: </label>\r\n                <br />\r\n                <textarea className=\"inputArea\" value={bugTrace} onChange={e => setBugTrace(e.target.value)} />\r\n            </div>\r\n        </form>\r\n\r\n        <button onClick={onClick} className=\"btn btn-primary\">{props.buttonLabel}</button>\r\n    </div>)\r\n}\r\n\r\nexport default IssueForm;","import React, { useState, useEffect } from 'react';\r\nimport LoadSpinner from '../LoadSpinner';\r\n\r\nimport IssueForm from \"./IssueForm\";\r\n\r\nimport Modal from \"styled-react-modal\";\r\n\r\nconst StyledModal = Modal.styled`\r\n  width: 70rem;\r\n  height: 40rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: grey;\r\n  opacity: ${(props) => props.opacity};\r\n  transition : all 0.3s ease-in-out;`;\r\n\r\nfunction IssueModal(props) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [opacity, setOpacity] = useState(0);\r\n\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n    const [error, setError] = useState(null);\r\n\r\n    function toggleModal(e) {\r\n        e.stopPropagation();\r\n        setOpacity(0);\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    function afterOpen() {\r\n        setTimeout(() => {\r\n            setOpacity(1);\r\n        }, 100);\r\n    }\r\n\r\n    function beforeClose() {\r\n        return new Promise((resolve) => {\r\n            setOpacity(0);\r\n            setTimeout(resolve, 300);\r\n        });\r\n    }\r\n\r\n    function onSubmit(issue) {\r\n        setIsSubmitting(true);\r\n        console.log(\"Heeloo\");\r\n        props.onSubmit(issue)\r\n            .then(\r\n                (result) => {\r\n                    setIsSubmitting(false)\r\n                    //close the modal\r\n                    setIsOpen(false);\r\n                    props.onDone();\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setIsSubmitting(false)\r\n                    setError(error);\r\n                }\r\n            );\r\n    }\r\n\r\n    const submitLabel = props.issue == null ? \"Create Issue\" : \"Update Issue\"\r\n    const toggleLabel = props.issue == null ? \"New Issue\" : props.issue.name\r\n\r\n    return (\r\n        <div\r\n        // style={{\r\n        //     \"padding\": \"1.5em\"\r\n        // }}\r\n        >\r\n            <button onClick={toggleModal} className=\"btn btn-primary\">{toggleLabel}</button>\r\n            <StyledModal\r\n                isOpen={isOpen}\r\n                afterOpen={afterOpen}\r\n                beforeClose={beforeClose}\r\n                onBackgroundClick={toggleModal}\r\n                onEscapeKeydown={toggleModal}\r\n                opacity={opacity}\r\n                backgroundProps={{ opacity }}\r\n            >\r\n                {(() => {\r\n\r\n                    if (isSubmitting) {\r\n                        return <LoadSpinner />\r\n                    } else if (error) {\r\n                        return <div>Error: {error.message}</div>;\r\n                    } else {\r\n                        return <IssueForm buttonHandler={onSubmit} buttonLabel={submitLabel} issue={props.issue} />\r\n                    }\r\n                })()}\r\n\r\n            </StyledModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IssueModal;","import React, { useState, useEffect } from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport LoadSpinner from '../LoadSpinner';\r\nimport IssueModal from './IssueModal';\r\n\r\nfunction IssuesBoard(props) {\r\n\r\n    const [error, setError] = useState(null);\r\n    const [issuesLoaded, setIssuesLoaded] = useState(false);\r\n\r\n    //arrays where the issues will be stored depending on their statuses\r\n    const [toDo, setToDo] = useState([]);\r\n    const [inProgress, setInProgress] = useState([]);\r\n    const [done, setDone] = useState([]);\r\n\r\n    const statusCols = [\"todo_col\", \"inprogress_col\", \"done_col\"];\r\n    const statusVals = [\"to do\", \"in progress\", \"done\"];\r\n\r\n\r\n    //pop the given issue from its current status array\r\n    function popIssue(issue) {\r\n        if (issue.status == \"to do\") {\r\n            setToDo(toDo.filter(is => is.id != issue.id));\r\n        } else if (issue.status == \"in progress\") {\r\n            setInProgress(inProgress.filter(is => is.id != issue.id));\r\n        } else if (issue.status == \"done\") {\r\n            setDone(done.filter(is => is.id != issue.id));\r\n        }\r\n    }\r\n\r\n    //push the given issue into a status array based on its current status\r\n    function pushIssue(issue) {\r\n\r\n        if (issue.status == \"to do\") {\r\n            setToDo([...toDo, issue]);\r\n        } else if (issue.status == \"in progress\") {\r\n            setInProgress([...inProgress, issue]);\r\n        } else if (issue.status == \"done\") {\r\n            setDone([...done, issue]);\r\n        }\r\n    }\r\n\r\n    function postIssue(issue) {\r\n        return fetch('/v1/issues', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                issue: {\r\n                    name: issue.name,\r\n                    desc: issue.desc,\r\n                    issue_type: issue.issue_type,\r\n                    bug_trace: issue.bug_trace,\r\n                    status: \"to do\",\r\n                    project: props.projectId\r\n                }\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n    function putIssue(issue) {\r\n        console.log(issue)\r\n        return fetch('/v1/issues', {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                issue: issue\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n    function putStatus(issue, status) {\r\n        popIssue(issue);\r\n        issue.status = status;\r\n        pushIssue(issue);\r\n\r\n        setIssuesLoaded(false);\r\n        putIssue(issue)\r\n            .then(\r\n                (result) => {\r\n\r\n                    setIssuesLoaded(true);\r\n                },\r\n                (error) => {\r\n                    setIssuesLoaded(true);\r\n                    setError(error);\r\n                }\r\n            );\r\n    }\r\n\r\n\r\n    //handler when we stop dragging an issue\r\n    function onStop(e, issue) {\r\n        //check in which column we've dragged the issue\r\n        e.stopPropagation(); //stop other handlers from triggering\r\n        let i;\r\n        for (i = 0; i < statusCols.length; i++) {\r\n\r\n            let bounds = document.getElementById(statusCols[i]).getBoundingClientRect();\r\n\r\n            if ((e.clientX > bounds.left) && (e.clientX < bounds.right)) {\r\n                console.log(\"In \" + statusVals[i]);\r\n\r\n                // putStatus(issue, statusVals[i]);\r\n\r\n                if (issue.status == statusVals[i]) {\r\n                    //TODO: reset if not in a known column or in same column\r\n                    setToDo(toDo);\r\n                    console.log(\"no change\");\r\n                } else {\r\n                    // issue.status = statusVals[i];\r\n                    putStatus(issue, statusVals[i]);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    function fetchIssues() {\r\n        fetch(`/v1/issues/byproject/${props.projectId}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIssuesLoaded(true);\r\n\r\n                    if (result[\"issues\"] != undefined) {\r\n                        let issues = result[\"issues\"];\r\n                        issues.sort((a, b) => a.last_modified_on - b.last_modified_on);\r\n                        // setIssues(issues);\r\n\r\n                        setToDo(issues.filter(issue => issue.status == \"to do\"));\r\n                        setInProgress(issues.filter(issue => issue.status == \"in progress\"));\r\n                        setDone(issues.filter(issue => issue.status == \"done\"));\r\n                    }\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setIssuesLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    function createDraggableIssues(issues) {\r\n        const draggableIssues = []\r\n        for (const [index, value] of issues.entries()) {\r\n            draggableIssues.push(<Draggable bounds=\"#board\" onDrag={(e) => onStop(e, value)} ><div className=\"listItem\"><IssueModal issue={value} onSubmit={putIssue} onDone={() => \"\"} /></div></Draggable>);\r\n        }\r\n\r\n        return draggableIssues;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchIssues();\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!issuesLoaded) {\r\n        return <LoadSpinner />;\r\n    } else {\r\n\r\n        const toDoComponents = createDraggableIssues(toDo);\r\n        const inProgressComponents = createDraggableIssues(inProgress);\r\n        const doneComponents = createDraggableIssues(done);\r\n\r\n        return (\r\n            <div\r\n                style={\r\n                    { \"padding\": \"1.5em\" }\r\n                }>\r\n\r\n                <IssueModal projectId={props.projectId} onSubmit={postIssue} issue={null} onDone={fetchIssues} />\r\n                <br />\r\n                <div id=\"board\" className=\"row\" style={{ position: 'relative', overflow: 'auto', padding: '0' }}>\r\n                    <div id={statusCols[0]} className=\"column\">\r\n                        To Do\r\n                    {toDoComponents}\r\n                    </div>\r\n                    <div id={statusCols[1]} className=\"column\">\r\n                        In progress\r\n                    {inProgressComponents}\r\n                    </div>\r\n                    <div id={statusCols[2]} className=\"column\">\r\n                        Done\r\n                    {doneComponents}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default IssuesBoard","import React, { useState, useEffect } from 'react';\r\nimport LoadSpinner from '../LoadSpinner';\r\nimport IssuesBoard from '../Issue/IssuesBoard'\r\n\r\nfunction Project(props) {\r\n    const [error, setError] = useState(null);\r\n    const [projectLoaded, setProjectLoaded] = useState(false);\r\n    const [project, setProject] = useState(null);\r\n\r\n    function fetchProject() {\r\n        fetch(`/v1/projects/byid/${props.match.params.projectId}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setProject(result);\r\n                    setProjectLoaded(true);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setProjectLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }\r\n\r\n\r\n\r\n    // Note: the empty deps array [] means \r\n    // this useEffect will run once\r\n    // similar to componentDidMount()\r\n    useEffect(() => {\r\n        fetchProject();\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!projectLoaded) {\r\n        return <LoadSpinner />;\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h2 style={{\r\n                    \"padding-top\": \"0.5em\",\r\n                    \"padding-left\": \"1em\"\r\n                }}>{project.name}</h2>\r\n                <IssuesBoard projectId={project.id} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Project","\r\nimport { Google } from '@styled-icons/boxicons-logos/Google';\r\nimport styled from 'styled-components'\r\n\r\nconst Icon = styled(Google)`\r\n  color: #fff;\r\n  transition: transform 200ms ease-in-out;\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    // function loginRedirect() {\r\n    //     props.history.push(\"/auth/google\");\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Login: </h3>\r\n            <a\r\n                href={window.location.origin + \"/auth/google\"}\r\n            >\r\n                <Icon\r\n                    // onClick={loginRedirect}\r\n                    size={36}\r\n                    style={{\r\n                        cursor: 'pointer',\r\n                        textAlign: 'center'\r\n                    }}\r\n                />\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","// const { ReactDraggable: Draggable, React, ReactDOM } = window;\n\nimport logo from './logo.svg';\nimport './App.css';\n\n\nimport ToggleMenu from './ToggleMenu/ToggleMenu'\n\nimport React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n\nimport ProjectExplorer from './Project/ProjectExplorer';\nimport Project from './Project/Project';\n\nimport Login from './Login/Login';\n\nimport { ModalProvider, BaseModalBackground } from \"styled-react-modal\";\n\nconst FadingBackground = styled(BaseModalBackground)`\n  opacity: ${(props) => props.opacity};\n  transition: all 0.3s ease-in-out;\n`;\n\nconst App = () => {\n\n  return (\n    <div>\n      <ModalProvider backgroundComponent={FadingBackground}>\n        <ToggleMenu />\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/projects/:projectId\" component={Project} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/\">\n              <ProjectExplorer />\n            </Route>\n\n          </Switch>\n        </BrowserRouter>\n      </ModalProvider>\n    </div>\n\n\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}